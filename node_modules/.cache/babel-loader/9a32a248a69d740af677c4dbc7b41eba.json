{"ast":null,"code":"import { modeToString } from '../lib/mode-to-string.js';\nimport { parseMtime } from '../lib/parse-mtime.js';\nimport { configure } from '../lib/configure.js';\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { abortSignal } from '../lib/abort-signal.js';\nimport { AbortController } from 'native-abort-controller';\nexport const createWrite = configure(api => {\n  async function write(path, input) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const controller = new AbortController();\n    const signal = abortSignal(controller.signal, options.signal);\n    const res = await api.post('files/write', {\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        streamChannels: true,\n        count: options.length,\n        ...options\n      }),\n      ...(await multipartRequest([{\n        content: input,\n        path: 'arg',\n        mode: modeToString(options.mode),\n        mtime: parseMtime(options.mtime)\n      }], controller, options.headers))\n    });\n    await res.text();\n  }\n\n  return write;\n});","map":{"version":3,"sources":["C:/Users/DM/Desktop/nftdapp/node_modules/ipfs-http-client/esm/src/files/write.js"],"names":["modeToString","parseMtime","configure","multipartRequest","toUrlSearchParams","abortSignal","AbortController","createWrite","api","write","path","input","options","controller","signal","res","post","searchParams","arg","streamChannels","count","length","content","mode","mtime","headers","text"],"mappings":"AAAA,SAASA,YAAT,QAA6B,0BAA7B;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,gBAAT,QAAiC,mCAAjC;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,OAAO,MAAMC,WAAW,GAAGL,SAAS,CAACM,GAAG,IAAI;AAC1C,iBAAeC,KAAf,CAAqBC,IAArB,EAA2BC,KAA3B,EAAgD;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AAC9C,UAAMC,UAAU,GAAG,IAAIP,eAAJ,EAAnB;AACA,UAAMQ,MAAM,GAAGT,WAAW,CAACQ,UAAU,CAACC,MAAZ,EAAoBF,OAAO,CAACE,MAA5B,CAA1B;AACA,UAAMC,GAAG,GAAG,MAAMP,GAAG,CAACQ,IAAJ,CAAS,aAAT,EAAwB;AACxCF,MAAAA,MADwC;AAExCG,MAAAA,YAAY,EAAEb,iBAAiB,CAAC;AAC9Bc,QAAAA,GAAG,EAAER,IADyB;AAE9BS,QAAAA,cAAc,EAAE,IAFc;AAG9BC,QAAAA,KAAK,EAAER,OAAO,CAACS,MAHe;AAI9B,WAAGT;AAJ2B,OAAD,CAFS;AAQxC,UAAG,MAAMT,gBAAgB,CAAC,CAAC;AACvBmB,QAAAA,OAAO,EAAEX,KADc;AAEvBD,QAAAA,IAAI,EAAE,KAFiB;AAGvBa,QAAAA,IAAI,EAAEvB,YAAY,CAACY,OAAO,CAACW,IAAT,CAHK;AAIvBC,QAAAA,KAAK,EAAEvB,UAAU,CAACW,OAAO,CAACY,KAAT;AAJM,OAAD,CAAD,EAKnBX,UALmB,EAKPD,OAAO,CAACa,OALD,CAAzB;AARwC,KAAxB,CAAlB;AAeA,UAAMV,GAAG,CAACW,IAAJ,EAAN;AACD;;AACD,SAAOjB,KAAP;AACD,CAtBmC,CAA7B","sourcesContent":["import { modeToString } from '../lib/mode-to-string.js';\nimport { parseMtime } from '../lib/parse-mtime.js';\nimport { configure } from '../lib/configure.js';\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { abortSignal } from '../lib/abort-signal.js';\nimport { AbortController } from 'native-abort-controller';\nexport const createWrite = configure(api => {\n  async function write(path, input, options = {}) {\n    const controller = new AbortController();\n    const signal = abortSignal(controller.signal, options.signal);\n    const res = await api.post('files/write', {\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        streamChannels: true,\n        count: options.length,\n        ...options\n      }),\n      ...await multipartRequest([{\n          content: input,\n          path: 'arg',\n          mode: modeToString(options.mode),\n          mtime: parseMtime(options.mtime)\n        }], controller, options.headers)\n    });\n    await res.text();\n  }\n  return write;\n});"]},"metadata":{},"sourceType":"module"}