{"ast":null,"code":"export const setupUserTx = `\nimport MyNFT from 0xfaddb86da8808076\nimport NonFungibleToken from 0x631e88ae7f1d7c20\nimport FungibleToken from 0x9a0766d93b6608b7\nimport FlowToken from 0x7e60df042a9c0868\nimport NFTMarketplace from 0xfaddb86da8808076\ntransaction {\n\n  prepare(acct: AuthAccount) {\n    acct.save(<- MyNFT.createEmptyCollection(), to: /storage/MyNFTCollection)\n    acct.link<&MyNFT.Collection{MyNFT.CollectionPublic, NonFungibleToken.CollectionPublic}>(/public/MyNFTCollection, target: /storage/MyNFTCollection)\n    acct.link<&MyNFT.Collection>(/private/MyNFTCollection, target: /storage/MyNFTCollection)\n    \n    let MyNFTCollection = acct.getCapability<&MyNFT.Collection>(/private/MyNFTCollection)\n    let FlowTokenVault = acct.getCapability<&FlowToken.Vault{FungibleToken.Receiver}>(/public/flowTokenReceiver)\n\n    acct.save(<- NFTMarketplace.createSaleCollection(MyNFTCollection: MyNFTCollection, FlowTokenVault: FlowTokenVault), to: /storage/MySaleCollection)\n    acct.link<&NFTMarketplace.SaleCollection{NFTMarketplace.SaleCollectionPublic}>(/public/MySaleCollection, target: /storage/MySaleCollection)\n  }\n\n  execute {\n    log(\"A user stored a Collection and a SaleCollection inside their account\")\n  }\n}\n\n`;","map":{"version":3,"sources":["C:/Users/DM/Desktop/nftdapp/src/cadence/transactions/setup_user.js"],"names":["setupUserTx"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAzBO","sourcesContent":["export const setupUserTx = `\r\nimport MyNFT from 0xfaddb86da8808076\r\nimport NonFungibleToken from 0x631e88ae7f1d7c20\r\nimport FungibleToken from 0x9a0766d93b6608b7\r\nimport FlowToken from 0x7e60df042a9c0868\r\nimport NFTMarketplace from 0xfaddb86da8808076\r\ntransaction {\r\n\r\n  prepare(acct: AuthAccount) {\r\n    acct.save(<- MyNFT.createEmptyCollection(), to: /storage/MyNFTCollection)\r\n    acct.link<&MyNFT.Collection{MyNFT.CollectionPublic, NonFungibleToken.CollectionPublic}>(/public/MyNFTCollection, target: /storage/MyNFTCollection)\r\n    acct.link<&MyNFT.Collection>(/private/MyNFTCollection, target: /storage/MyNFTCollection)\r\n    \r\n    let MyNFTCollection = acct.getCapability<&MyNFT.Collection>(/private/MyNFTCollection)\r\n    let FlowTokenVault = acct.getCapability<&FlowToken.Vault{FungibleToken.Receiver}>(/public/flowTokenReceiver)\r\n\r\n    acct.save(<- NFTMarketplace.createSaleCollection(MyNFTCollection: MyNFTCollection, FlowTokenVault: FlowTokenVault), to: /storage/MySaleCollection)\r\n    acct.link<&NFTMarketplace.SaleCollection{NFTMarketplace.SaleCollectionPublic}>(/public/MySaleCollection, target: /storage/MySaleCollection)\r\n  }\r\n\r\n  execute {\r\n    log(\"A user stored a Collection and a SaleCollection inside their account\")\r\n  }\r\n}\r\n\r\n`"]},"metadata":{},"sourceType":"module"}