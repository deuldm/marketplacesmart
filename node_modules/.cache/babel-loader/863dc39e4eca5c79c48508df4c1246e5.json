{"ast":null,"code":"var e = function (e, t, n) {\n  return {\n    label: e,\n    asArgument: t,\n    asInjection: n\n  };\n},\n    t = function (e) {\n  return Array.isArray(e);\n},\n    n = function (e) {\n  return \"object\" == typeof e;\n},\n    r = function (e) {\n  return null == e;\n},\n    i = function (e) {\n  return \"number\" == typeof e;\n},\n    o = function (e) {\n  return Number.isInteger(e);\n},\n    u = function (e) {\n  return \"string\" == typeof e;\n},\n    f = function (e) {\n  throw new Error(\"Type Error: \" + e);\n},\n    c = e(\"Identity\", function (e) {\n  return e;\n}, function (e) {\n  return e;\n}),\n    a = e(\"UInt\", function (e) {\n  if (i(e) && o(e)) return {\n    type: \"UInt\",\n    value: e.toString()\n  };\n  f(\"Expected Positive Integer for type Unsigned Int\");\n}, function (e) {\n  return e;\n}),\n    d = e(\"Int\", function (e) {\n  if (i(e) && o(e)) return {\n    type: \"Int\",\n    value: e.toString()\n  };\n  f(\"Expected Integer for type Int\");\n}, function (e) {\n  return e;\n}),\n    p = e(\"UInt8\", function (e) {\n  if (i(e) && o(e)) return {\n    type: \"UInt8\",\n    value: e.toString()\n  };\n  f(\"Expected integer for UInt8\");\n}, function (e) {\n  return e;\n}),\n    l = e(\"Int8\", function (e) {\n  if (i(e) && o(e)) return {\n    type: \"Int8\",\n    value: e.toString()\n  };\n  f(\"Expected positive integer for Int8\");\n}, function (e) {\n  return e;\n}),\n    s = e(\"UInt16\", function (e) {\n  if (i(e) && o(e)) return {\n    type: \"UInt16\",\n    value: e.toString()\n  };\n  f(\"Expected integer for UInt16\");\n}, function (e) {\n  return e;\n}),\n    g = e(\"Int16\", function (e) {\n  if (i(e) && o(e)) return {\n    type: \"Int16\",\n    value: e.toString()\n  };\n  f(\"Expected positive integer for Int16\");\n}, function (e) {\n  return e;\n}),\n    v = e(\"UInt32\", function (e) {\n  if (i(e) && o(e)) return {\n    type: \"UInt32\",\n    value: e.toString()\n  };\n  f(\"Expected integer for UInt32\");\n}, function (e) {\n  return e;\n}),\n    y = e(\"Int32\", function (e) {\n  if (i(e) && o(e)) return {\n    type: \"Int32\",\n    value: e.toString()\n  };\n  f(\"Expected positive integer for Int32\");\n}, function (e) {\n  return e;\n}),\n    m = e(\"UInt64\", function (e) {\n  if (i(e) && o(e)) return {\n    type: \"UInt64\",\n    value: e.toString()\n  };\n  f(\"Expected integer for UInt64\");\n}, function (e) {\n  return e;\n}),\n    x = e(\"Int64\", function (e) {\n  if (i(e) && o(e)) return {\n    type: \"Int64\",\n    value: e.toString()\n  };\n  f(\"Expected positive integer for Int64\");\n}, function (e) {\n  return e;\n}),\n    h = e(\"UInt128\", function (e) {\n  if (i(e) && o(e)) return {\n    type: \"UInt128\",\n    value: e.toString()\n  };\n  f(\"Expected integer for UInt128\");\n}, function (e) {\n  return e;\n}),\n    I = e(\"Int128\", function (e) {\n  if (i(e) && o(e)) return {\n    type: \"Int128\",\n    value: e.toString()\n  };\n  f(\"Expected positive integer for Int128\");\n}, function (e) {\n  return e;\n}),\n    E = e(\"UInt256\", function (e) {\n  if (i(e) && o(e)) return {\n    type: \"UInt256\",\n    value: e.toString()\n  };\n  f(\"Expected integer for UInt256\");\n}, function (e) {\n  return e;\n}),\n    b = e(\"Int256\", function (e) {\n  if (i(e) && o(e)) return {\n    type: \"Int256\",\n    value: e.toString()\n  };\n  f(\"Expected integer for Int256\");\n}, function (e) {\n  return e;\n}),\n    U = e(\"Word8\", function (e) {\n  if (i(e) && o(e)) return {\n    type: \"Word8\",\n    value: e.toString()\n  };\n  f(\"Expected positive number for Word8\");\n}, function (e) {\n  return e;\n}),\n    S = e(\"Word16\", function (e) {\n  if (i(e) && o(e)) return {\n    type: \"Word16\",\n    value: e.toString()\n  };\n  f(\"Expected positive number for Word16\");\n}, function (e) {\n  return e;\n}),\n    F = e(\"Word32\", function (e) {\n  if (i(e) && o(e)) return {\n    type: \"Word32\",\n    value: e.toString()\n  };\n  f(\"Expected positive number for Word32\");\n}, function (e) {\n  return e;\n}),\n    A = e(\"Word64\", function (e) {\n  if (i(e) && o(e)) return {\n    type: \"Word64\",\n    value: e.toString()\n  };\n  f(\"Expected positive number for Word64\");\n}, function (e) {\n  return e;\n}),\n    w = function () {\n  console.error(\"\\n          %c@onflow/types Deprecation Notice\\n          ========================\\n\\n          Passing in Numbers as values for Fix64 and UFix64 types is deprecated and will cease to work in future releases of @onflow/types.\\n          Find out more here: https://github.com/onflow/flow-js-sdk/blob/master/packages/types/WARNINGS.md#0001-[U]Fix64-as-Number\\n\\n          =======================\\n        \".replace(/\\n\\s+/g, \"\\n\").trim(), \"font-weight:bold;font-family:monospace;\");\n},\n    j = e(\"UFix64\", function (e) {\n  if (u(e)) {\n    var t = e.split(\".\");\n    return 2 !== t.length && f(\"Expected one decimal but found \" + t.length + \" in the [U]Fix64 value. Find out more about [U]Fix64 types here: https://docs.onflow.org/cadence/json-cadence-spec/#fixed-point-numbers\"), (0 == t[1].length || t[1].length > 8) && f(\"Expected at least one digit, and at most 8 digits following the decimal of the [U]Fix64 value but found \" + t[1].length + \" digits. Find out more about [U]Fix64 types here: https://docs.onflow.org/cadence/json-cadence-spec/#fixed-point-numbers\"), {\n      type: \"UFix64\",\n      value: e\n    };\n  }\n\n  if (i(e)) return w(), {\n    type: \"UFix64\",\n    value: e.toString()\n  };\n  f(\"Expected String for UFix64\");\n}, function (e) {\n  return e;\n}),\n    W = e(\"Fix64\", function (e) {\n  if (u(e)) {\n    var t = e.split(\".\");\n    return 2 !== t.length && f(\"Expected one decimal but found \" + t.length + \" in the [U]Fix64 value. Find out more about [U]Fix64 types here: https://docs.onflow.org/cadence/json-cadence-spec/#fixed-point-numbers\"), (0 == t[1].length || t[1].length > 8) && f(\"Expected at least one digit, and at most 8 digits following the decimal of the [U]Fix64 value but found \" + t[1].length + \" digits. Find out more about [U]Fix64 types here: https://docs.onflow.org/cadence/json-cadence-spec/#fixed-point-numbers\"), {\n      type: \"Fix64\",\n      value: e\n    };\n  }\n\n  if (i(e)) return w(), {\n    type: \"Fix64\",\n    value: e.toString()\n  };\n  f(\"Expected String for Fix64\");\n}, function (e) {\n  return e;\n}),\n    k = e(\"String\", function (e) {\n  if (u(e)) return {\n    type: \"String\",\n    value: e\n  };\n  f(\"Expected String for type String\");\n}, function (e) {\n  return e;\n}),\n    P = e(\"Character\", function (e) {\n  if (u(e)) return {\n    type: \"Character\",\n    value: e\n  };\n  f(\"Expected Character for type Character\");\n}, function (e) {\n  return e;\n}),\n    O = e(\"Bool\", function (e) {\n  if (\"boolean\" == typeof e) return {\n    type: \"Bool\",\n    value: e\n  };\n  f(\"Expected Boolean for type Bool\");\n}, function (e) {\n  return e;\n}),\n    R = e(\"Address\", function (e) {\n  if (u(e)) return {\n    type: \"Address\",\n    value: e\n  };\n  f(\"Expected Address for type Address\");\n}, function (e) {\n  return e;\n}),\n    N = e(\"Void\", function (e) {\n  if (!e || r(e)) return {\n    type: \"Void\"\n  };\n  f(\"Expected Void for type Void\");\n}, function (e) {\n  return e;\n}),\n    B = function (t) {\n  return e(\"Optional\", function (e) {\n    return {\n      type: \"Optional\",\n      value: r(e) ? null : t.asArgument(e)\n    };\n  }, function (e) {\n    return e;\n  });\n},\n    C = e(\"Reference\", function (e) {\n  if (n(e)) return {\n    type: \"Reference\",\n    value: e\n  };\n  f(\"Expected Object for type Reference\");\n}, function (e) {\n  return e;\n}),\n    D = function (n) {\n  return void 0 === n && (n = []), e(\"Array\", function (e) {\n    return {\n      type: \"Array\",\n      value: t(n) ? n.map(function (t, n) {\n        return t.asArgument(e[n]);\n      }) : e.map(function (e) {\n        return n.asArgument(e);\n      })\n    };\n  }, function (e) {\n    return e;\n  });\n},\n    V = function (r) {\n  return void 0 === r && (r = []), e(\"Dictionary\", function (e) {\n    if (n(e)) return {\n      type: \"Dictionary\",\n      value: t(r) ? r.map(function (t, n) {\n        return {\n          key: t.key.asArgument(e[n].key),\n          value: t.value.asArgument(e[n].value)\n        };\n      }) : t(e) ? e.map(function (e) {\n        return {\n          key: r.key.asArgument(e.key),\n          value: r.value.asArgument(e.value)\n        };\n      }) : [{\n        key: r.key.asArgument(e.key),\n        value: r.value.asArgument(e.value)\n      }]\n    };\n    f(\"Expected Object for type Dictionary\");\n  }, function (e) {\n    return e;\n  });\n},\n    G = function (r, i) {\n  return void 0 === i && (i = []), e(\"Event\", function (e) {\n    if (n(e)) return {\n      type: \"Event\",\n      value: {\n        id: r,\n        fields: t(i) ? i.map(function (t, n) {\n          return {\n            name: e.fields[n].name,\n            value: t.value.asArgument(e.fields[n].value)\n          };\n        }) : e.fields.map(function (e) {\n          return {\n            name: e.name,\n            value: i.value.asArgument(e.value)\n          };\n        })\n      }\n    };\n    f(\"Expected Object for type Event\");\n  }, function (e) {\n    return e;\n  });\n},\n    T = function (r, i) {\n  return void 0 === i && (i = []), e(\"Resource\", function (e) {\n    if (n(e)) return {\n      type: \"Resource\",\n      value: {\n        id: r,\n        fields: t(i) ? i.map(function (t, n) {\n          return {\n            name: e.fields[n].name,\n            value: t.value.asArgument(e.fields[n].value)\n          };\n        }) : e.fields.map(function (e) {\n          return {\n            name: e.name,\n            value: i.value.asArgument(e.value)\n          };\n        })\n      }\n    };\n    f(\"Expected Object for type Resource\");\n  }, function (e) {\n    return e;\n  });\n},\n    q = function (r, i) {\n  return void 0 === i && (i = []), e(\"Struct\", function (e) {\n    if (n(e)) return {\n      type: \"Struct\",\n      value: {\n        id: r,\n        fields: t(i) ? i.map(function (t, n) {\n          return {\n            name: e.fields[n].name,\n            value: t.value.asArgument(e.fields[n].value)\n          };\n        }) : e.fields.map(function (e) {\n          return {\n            name: e.name,\n            value: i.value.asArgument(e.value)\n          };\n        })\n      }\n    };\n    f(\"Expected Object for type Struct\");\n  }, function (e) {\n    return e;\n  });\n},\n    z = e(\"Path\", function (e) {\n  if (n(e)) return u(e.domain) || f(\"Expected a string for the Path domain but found \" + e.domain + \". Find out more about the Path type here: https://docs.onflow.org/cadence/json-cadence-spec/#path\"), \"storage\" !== e.domain && \"private\" !== e.domain && \"public\" !== e.domain && f('Expected either \"storage\", \"private\" or \"public\" as the Path domain but found ' + e.domain + \". Find out more about the Path type here: https://docs.onflow.org/cadence/json-cadence-spec/#path\"), u(e.identifier) || f(\"Expected a string for the Path identifier but found \" + e.identifier + \". Find out more about the Path type here: https://docs.onflow.org/cadence/json-cadence-spec/#path\"), {\n    type: \"Path\",\n    value: {\n      domain: e.domain,\n      identifier: e.identifier\n    }\n  };\n  f(\"Expected Object for type Path\");\n}, function (e) {\n  return e;\n});\n\nexport { R as Address, D as Array, O as Bool, P as Character, V as Dictionary, G as Event, W as Fix64, c as Identity, d as Int, I as Int128, g as Int16, b as Int256, y as Int32, x as Int64, l as Int8, B as Optional, z as Path, C as Reference, T as Resource, k as String, q as Struct, j as UFix64, a as UInt, h as UInt128, s as UInt16, E as UInt256, v as UInt32, m as UInt64, p as UInt8, N as Void, S as Word16, F as Word32, A as Word64, U as Word8, D as _Array };","map":{"version":3,"mappings":"AAAA,IAAMA,IAAO,UAACC,CAAD,EAAQC,CAAR,EAAoBC,CAApB,EAAoBA;AAAAA,SAAiB;AAChDF,YADgD;AAEhDC,iBAFgD;AAGhDC;AAHgD,GAAjBA;AAG/BA,CAHF;AAAA,IAMMC,IAAU,UAACC,CAAD,EAACA;AAAAA,SAAMC,MAAMF,OAANE,CAAcD,CAAdC,CAAND;AAAoBA,CANrC;AAAA,IAOME,IAAQ,UAACF,CAAD,EAACA;AAAAA,SAAmB,mBAANA,CAAbA;AAAaA,CAP5B;AAAA,IAQMG,IAAS,UAACH,CAAD,EAACA;AAAAA,SAAW,QAALA,CAANA;AAAMA,CARtB;AAAA,IAUMI,IAAW,UAACJ,CAAD,EAACA;AAAAA,SAAmB,mBAANA,CAAbA;AAAaA,CAV/B;AAAA,IAWMK,IAAY,UAACL,CAAD,EAACA;AAAAA,SAAMM,OAAOD,SAAPC,CAAiBN,CAAjBM,CAANN;AAAuBA,CAX1C;AAAA,IAYMO,IAAW,UAACP,CAAD,EAACA;AAAAA,SAAmB,mBAANA,CAAbA;AAAaA,CAZ/B;AAAA,IAcMQ,IAAiB,UAACC,CAAD,EAACA;AACtB,YAAUC,KAAV,CAAgB,iBAAiBD,CAAjC;AAAiCA,CAfnC;AAAA,IAkBaE,IAAWhB,EACtB,UADsBA,EAEtB,UAACiB,CAAD,EAACA;AAAAA,SAAMA,CAANA;AAAMA,CAFejB,EAGtB,UAACiB,CAAD,EAACA;AAAAA,SAAMA,CAANA;AAAMA,CAHejB,CAlBxB;AAAA,IAwBakB,IAAOlB,EAClB,MADkBA,EAElB,UAACiB,CAAD,EAACA;AACC,MAAIR,EAASQ,CAATR,KAAeC,EAAUO,CAAVP,CAAnB,EACE,OAAO;AACLV,UAAM,MADD;AAELmB,WAAOF,EAAEG,QAAFH;AAFF,GAAP;AAIFJ,IAAe,iDAAfA;AAAe,CARCb,EAUlB,UAACiB,CAAD,EAACA;AAAAA,SAAMA,CAANA;AAAMA,CAVWjB,CAxBpB;AAAA,IAqCaqB,IAAMrB,EACjB,KADiBA,EAEjB,UAACiB,CAAD,EAACA;AACC,MAAIR,EAASQ,CAATR,KAAeC,EAAUO,CAAVP,CAAnB,EACE,OAAO;AACLV,UAAM,KADD;AAELmB,WAAOF,EAAEG,QAAFH;AAFF,GAAP;AAIFJ,IAAe,+BAAfA;AAAe,CARAb,EAUjB,UAACiB,CAAD,EAACA;AAAAA,SAAMA,CAANA;AAAMA,CAVUjB,CArCnB;AAAA,IAkDasB,IAAQtB,EACnB,OADmBA,EAEnB,UAACiB,CAAD,EAACA;AACC,MAAIR,EAASQ,CAATR,KAAeC,EAAUO,CAAVP,CAAnB,EACE,OAAO;AACLV,UAAM,OADD;AAELmB,WAAOF,EAAEG,QAAFH;AAFF,GAAP;AAIFJ,IAAe,4BAAfA;AAAe,CAREb,EAUnB,UAACiB,CAAD,EAACA;AAAAA,SAAMA,CAANA;AAAMA,CAVYjB,CAlDrB;AAAA,IA+DauB,IAAOvB,EAClB,MADkBA,EAElB,UAACiB,CAAD,EAACA;AACC,MAAIR,EAASQ,CAATR,KAAeC,EAAUO,CAAVP,CAAnB,EACE,OAAO;AACLV,UAAM,MADD;AAELmB,WAAOF,EAAEG,QAAFH;AAFF,GAAP;AAIFJ,IAAe,oCAAfA;AAAe,CARCb,EAUlB,UAACiB,CAAD,EAACA;AAAAA,SAAMA,CAANA;AAAMA,CAVWjB,CA/DpB;AAAA,IA4EawB,IAASxB,EACpB,QADoBA,EAEpB,UAACiB,CAAD,EAACA;AACC,MAAIR,EAASQ,CAATR,KAAeC,EAAUO,CAAVP,CAAnB,EACE,OAAO;AACLV,UAAM,QADD;AAELmB,WAAOF,EAAEG,QAAFH;AAFF,GAAP;AAIFJ,IAAe,6BAAfA;AAAe,CARGb,EAUpB,UAACiB,CAAD,EAACA;AAAAA,SAAMA,CAANA;AAAMA,CAVajB,CA5EtB;AAAA,IAyFayB,IAAQzB,EACnB,OADmBA,EAEnB,UAACiB,CAAD,EAACA;AACC,MAAIR,EAASQ,CAATR,KAAeC,EAAUO,CAAVP,CAAnB,EACE,OAAO;AACLV,UAAM,OADD;AAELmB,WAAOF,EAAEG,QAAFH;AAFF,GAAP;AAIFJ,IAAe,qCAAfA;AAAe,CAREb,EAUnB,UAACiB,CAAD,EAACA;AAAAA,SAAMA,CAANA;AAAMA,CAVYjB,CAzFrB;AAAA,IAsGa0B,IAAS1B,EACpB,QADoBA,EAEpB,UAACiB,CAAD,EAACA;AACC,MAAIR,EAASQ,CAATR,KAAeC,EAAUO,CAAVP,CAAnB,EACE,OAAO;AACLV,UAAM,QADD;AAELmB,WAAOF,EAAEG,QAAFH;AAFF,GAAP;AAIFJ,IAAe,6BAAfA;AAAe,CARGb,EAUpB,UAACiB,CAAD,EAACA;AAAAA,SAAMA,CAANA;AAAMA,CAVajB,CAtGtB;AAAA,IAmHa2B,IAAQ3B,EACnB,OADmBA,EAEnB,UAACiB,CAAD,EAACA;AACC,MAAIR,EAASQ,CAATR,KAAeC,EAAUO,CAAVP,CAAnB,EACE,OAAO;AACLV,UAAM,OADD;AAELmB,WAAOF,EAAEG,QAAFH;AAFF,GAAP;AAIFJ,IAAe,qCAAfA;AAAe,CAREb,EAUnB,UAACiB,CAAD,EAACA;AAAAA,SAAMA,CAANA;AAAMA,CAVYjB,CAnHrB;AAAA,IAgIa4B,IAAS5B,EACpB,QADoBA,EAEpB,UAACiB,CAAD,EAACA;AACC,MAAIR,EAASQ,CAATR,KAAeC,EAAUO,CAAVP,CAAnB,EACE,OAAO;AACLV,UAAM,QADD;AAELmB,WAAOF,EAAEG,QAAFH;AAFF,GAAP;AAIFJ,IAAe,6BAAfA;AAAe,CARGb,EAUpB,UAACiB,CAAD,EAACA;AAAAA,SAAMA,CAANA;AAAMA,CAVajB,CAhItB;AAAA,IA6Ia6B,IAAQ7B,EACnB,OADmBA,EAEnB,UAACiB,CAAD,EAACA;AACC,MAAIR,EAASQ,CAATR,KAAeC,EAAUO,CAAVP,CAAnB,EACE,OAAO;AACLV,UAAM,OADD;AAELmB,WAAOF,EAAEG,QAAFH;AAFF,GAAP;AAIFJ,IAAe,qCAAfA;AAAe,CAREb,EAUnB,UAACiB,CAAD,EAACA;AAAAA,SAAMA,CAANA;AAAMA,CAVYjB,CA7IrB;AAAA,IA0Ja8B,IAAU9B,EACrB,SADqBA,EAErB,UAACiB,CAAD,EAACA;AACC,MAAIR,EAASQ,CAATR,KAAeC,EAAUO,CAAVP,CAAnB,EACE,OAAO;AACLV,UAAM,SADD;AAELmB,WAAOF,EAAEG,QAAFH;AAFF,GAAP;AAIFJ,IAAe,8BAAfA;AAAe,CARIb,EAUrB,UAACiB,CAAD,EAACA;AAAAA,SAAMA,CAANA;AAAMA,CAVcjB,CA1JvB;AAAA,IAuKa+B,IAAS/B,EACpB,QADoBA,EAEpB,UAACiB,CAAD,EAACA;AACC,MAAIR,EAASQ,CAATR,KAAeC,EAAUO,CAAVP,CAAnB,EACE,OAAO;AACLV,UAAM,QADD;AAELmB,WAAOF,EAAEG,QAAFH;AAFF,GAAP;AAIFJ,IAAe,sCAAfA;AAAe,CARGb,EAUpB,UAACiB,CAAD,EAACA;AAAAA,SAAMA,CAANA;AAAMA,CAVajB,CAvKtB;AAAA,IAoLagC,IAAUhC,EACrB,SADqBA,EAErB,UAACiB,CAAD,EAACA;AACC,MAAIR,EAASQ,CAATR,KAAeC,EAAUO,CAAVP,CAAnB,EACE,OAAO;AACLV,UAAM,SADD;AAELmB,WAAOF,EAAEG,QAAFH;AAFF,GAAP;AAIFJ,IAAe,8BAAfA;AAAe,CARIb,EAUrB,UAACiB,CAAD,EAACA;AAAAA,SAAMA,CAANA;AAAMA,CAVcjB,CApLvB;AAAA,IAiMaiC,IAASjC,EACpB,QADoBA,EAEpB,UAACiB,CAAD,EAACA;AACC,MAAIR,EAASQ,CAATR,KAAeC,EAAUO,CAAVP,CAAnB,EACE,OAAO;AACLV,UAAM,QADD;AAELmB,WAAOF,EAAEG,QAAFH;AAFF,GAAP;AAIFJ,IAAe,6BAAfA;AAAe,CARGb,EAUpB,UAACiB,CAAD,EAACA;AAAAA,SAAMA,CAANA;AAAMA,CAVajB,CAjMtB;AAAA,IA8MakC,IAAQlC,EACnB,OADmBA,EAEnB,UAACiB,CAAD,EAACA;AACC,MAAIR,EAASQ,CAATR,KAAeC,EAAUO,CAAVP,CAAnB,EACE,OAAO;AACLV,UAAM,OADD;AAELmB,WAAOF,EAAEG,QAAFH;AAFF,GAAP;AAIFJ,IAAe,oCAAfA;AAAe,CAREb,EAUnB,UAACiB,CAAD,EAACA;AAAAA,SAAMA,CAANA;AAAMA,CAVYjB,CA9MrB;AAAA,IA2NamC,IAASnC,EACpB,QADoBA,EAEpB,UAACiB,CAAD,EAACA;AACC,MAAIR,EAASQ,CAATR,KAAeC,EAAUO,CAAVP,CAAnB,EACE,OAAO;AACLV,UAAM,QADD;AAELmB,WAAOF,EAAEG,QAAFH;AAFF,GAAP;AAIFJ,IAAe,qCAAfA;AAAe,CARGb,EAUpB,UAACiB,CAAD,EAACA;AAAAA,SAAMA,CAANA;AAAMA,CAVajB,CA3NtB;AAAA,IAwOaoC,IAASpC,EACpB,QADoBA,EAEpB,UAACiB,CAAD,EAACA;AACC,MAAIR,EAASQ,CAATR,KAAeC,EAAUO,CAAVP,CAAnB,EACE,OAAO;AACLV,UAAM,QADD;AAELmB,WAAOF,EAAEG,QAAFH;AAFF,GAAP;AAIFJ,IAAe,qCAAfA;AAAe,CARGb,EAUpB,UAACiB,CAAD,EAACA;AAAAA,SAAMA,CAANA;AAAMA,CAVajB,CAxOtB;AAAA,IAqPaqC,IAASrC,EACpB,QADoBA,EAEpB,UAACiB,CAAD,EAACA;AACC,MAAIR,EAASQ,CAATR,KAAeC,EAAUO,CAAVP,CAAnB,EACE,OAAO;AACLV,UAAM,QADD;AAELmB,WAAOF,EAAEG,QAAFH;AAFF,GAAP;AAIFJ,IAAe,qCAAfA;AAAe,CARGb,EAUpB,UAACiB,CAAD,EAACA;AAAAA,SAAMA,CAANA;AAAMA,CAVajB,CArPtB;AAAA,IAkQMsC,IAAwC;AAC5CC,UAAQC,KAARD,CACE,uZASGE,OATH,CASW,QATX,EASqB,IATrB,EAUGC,IAVH,EADFH,EAYE,yCAZFA;AAYE,CA/QJ;AAAA,IAmRaI,IAAS3C,EACpB,QADoBA,EAEpB,UAACiB,CAAD,EAACA;AACC,MAAIL,EAASK,CAATL,CAAJ,EAAiB;AACf,QAAMgC,IAAS3B,EAAE4B,KAAF5B,CAAQ,GAARA,CAAf;AAQA,WAPsB,MAAlB2B,EAAOE,MAAW,IACpBjC,sCAAiD+B,EAAOE,MAAxDjC,GAAwDiC,yIAAxDjC,CADoB,EACoCiC,CAElC,KAApBF,EAAO,CAAPA,EAAUE,MAAU,IAAKF,EAAO,CAAPA,EAAUE,MAAVF,GAAmB,CAFUE,KAGxDjC,+GAA0H+B,EAAO,CAAPA,EAAUE,MAApIjC,GAAoIiC,0HAApIjC,CAJoB,EAOf;AACLb,YAAM,QADD;AAELmB,aAAOF;AAFF,KAAP;AAESA;;AAAAA,MAEAR,EAASQ,CAATR,CAFAQ,EAIT,OADAqB,KACO;AACLtC,UAAM,QADD;AAELmB,WAAOF,EAAEG,QAAFH;AAFF,GAAP;AAKFJ,IAAe,4BAAfA;AAAe,CAvBGb,EAyBpB,UAACiB,CAAD,EAACA;AAAAA,SAAMA,CAANA;AAAMA,CAzBajB,CAnRtB;AAAA,IA+Sa+C,IAAQ/C,EACnB,OADmBA,EAEnB,UAACiB,CAAD,EAACA;AACC,MAAIL,EAASK,CAATL,CAAJ,EAAiB;AACf,QAAMgC,IAAS3B,EAAE4B,KAAF5B,CAAQ,GAARA,CAAf;AAQA,WAPsB,MAAlB2B,EAAOE,MAAW,IACpBjC,sCAAiD+B,EAAOE,MAAxDjC,GAAwDiC,yIAAxDjC,CADoB,EACoCiC,CAElC,KAApBF,EAAO,CAAPA,EAAUE,MAAU,IAAKF,EAAO,CAAPA,EAAUE,MAAVF,GAAmB,CAFUE,KAGxDjC,+GAA0H+B,EAAO,CAAPA,EAAUE,MAApIjC,GAAoIiC,0HAApIjC,CAJoB,EAOf;AACLb,YAAM,OADD;AAELmB,aAAOF;AAFF,KAAP;AAESA;;AAAAA,MAEAR,EAASQ,CAATR,CAFAQ,EAIT,OADAqB,KACO;AACLtC,UAAM,OADD;AAELmB,WAAOF,EAAEG,QAAFH;AAFF,GAAP;AAKFJ,IAAe,2BAAfA;AAAe,CAvBEb,EAyBnB,UAACiB,CAAD,EAACA;AAAAA,SAAMA,CAANA;AAAMA,CAzBYjB,CA/SrB;AAAA,IA2UagD,IAAShD,EACpB,QADoBA,EAEpB,UAACiB,CAAD,EAACA;AACC,MAAIL,EAASK,CAATL,CAAJ,EACE,OAAO;AACLZ,UAAM,QADD;AAELmB,WAAOF;AAFF,GAAP;AAIFJ,IAAe,iCAAfA;AAAe,CARGb,EAUpB,UAACiB,CAAD,EAACA;AAAAA,SAAMA,CAANA;AAAMA,CAVajB,CA3UtB;AAAA,IAwVaiD,IAAYjD,EACvB,WADuBA,EAEvB,UAACiB,CAAD,EAACA;AACC,MAAIL,EAASK,CAATL,CAAJ,EACE,OAAO;AACLZ,UAAM,WADD;AAELmB,WAAOF;AAFF,GAAP;AAIFJ,IAAe,uCAAfA;AAAe,CARMb,EAUvB,UAACiB,CAAD,EAACA;AAAAA,SAAMA,CAANA;AAAMA,CAVgBjB,CAxVzB;AAAA,IAqWakD,IAAOlD,EAClB,MADkBA,EAElB,UAACiB,CAAD,EAACA;AACC,MA/VkC,oBA+VpBA,CAAd,EACE,OAAO;AACLjB,UAAM,MADD;AAELmB,WAAOF;AAFF,GAAP;AAIFJ,IAAe,gCAAfA;AAAe,CARCb,EAUlB,UAACiB,CAAD,EAACA;AAAAA,SAAMA,CAANA;AAAMA,CAVWjB,CArWpB;AAAA,IAkXamD,IAAUnD,EACrB,SADqBA,EAErB,UAACiB,CAAD,EAACA;AACC,MAAIL,EAASK,CAATL,CAAJ,EACE,OAAO;AACLZ,UAAM,SADD;AAELmB,WAAOF;AAFF,GAAP;AAIFJ,IAAe,mCAAfA;AAAe,CARIb,EAUrB,UAACiB,CAAD,EAACA;AAAAA,SAAMA,CAANA;AAAMA,CAVcjB,CAlXvB;AAAA,IA+XaoD,IAAOpD,EAClB,MADkBA,EAElB,UAACiB,CAAD,EAACA;AACC,OAAKA,CAAL,IAAUT,EAAOS,CAAPT,CAAV,EACE,OAAO;AACLR,UAAM;AADD,GAAP;AAGFa,IAAe,6BAAfA;AAAe,CAPCb,EASlB,UAACiB,CAAD,EAACA;AAAAA,SAAMA,CAANA;AAAMA,CATWjB,CA/XpB;AAAA,IA2YaqD,IAAW,UAACC,CAAD,EAACA;AAAAA,SACvBtD,EACE,UADFA,EAEE,UAACiB,CAAD,EAACA;AAAAA,WAAO;AACNjB,YAAM,UADA;AAENmB,aAAOX,EAAOS,CAAPT,IAAY,IAAZA,GAAmB8C,EAASpD,UAAToD,CAAoBrC,CAApBqC;AAFpB,KAAPrC;AAE+CA,GAJlDjB,EAME,UAACiB,CAAD,EAACA;AAAAA,WAAMA,CAANA;AAAMA,GANTjB,CADuBsD;AAOdrC,CAlZX;AAAA,IAqZasC,IAAYvD,EACvB,WADuBA,EAEvB,UAACiB,CAAD,EAACA;AACC,MAAIV,EAAMU,CAANV,CAAJ,EACE,OAAO;AACLP,UAAM,WADD;AAELmB,WAAOF;AAFF,GAAP;AAIFJ,IAAe,oCAAfA;AAAe,CARMb,EAUvB,UAACiB,CAAD,EAACA;AAAAA,SAAMA,CAANA;AAAMA,CAVgBjB,CArZzB;AAAA,IAkaawD,IAAS,UAACF,CAAD,EAACA;AAAAA,8BAAW,EAAXA,GACrBtD,EACE,OADFA,EAEE,UAACiB,CAAD,EAACA;AACC,WAAO;AACLjB,YAAM,OADD;AAELmB,aAAOf,EAAQkD,CAARlD,IACHkD,EAASG,GAATH,CAAa,UAACI,CAAD,EAAIC,CAAJ,EAAIA;AAAAA,eAAMD,EAAExD,UAAFwD,CAAazC,EAAE0C,CAAF1C,CAAbyC,CAANC;AAAqBA,OAAtCL,CADGlD,GAEHa,EAAEwC,GAAFxC,CAAM,UAAC2C,CAAD,EAACA;AAAAA,eAAMN,EAASpD,UAAToD,CAAoBM,CAApBN,CAANM;AAA0BA,OAAjC3C;AAJC,KAAP;AAIuC2C,GAP3C5D,EAUE,UAACiB,CAAD,EAACA;AAAAA,WAAMA,CAANA;AAAMA,GAVTjB,CADqBsD;AAWZrC,CA7aX;AAAA,IAkba4C,IAAa,UAACP,CAAD,EAACA;AAAAA,8BAAW,EAAXA,GACzBtD,EACE,YADFA,EAEE,UAACiB,CAAD,EAACA;AACC,QAAIV,EAAMU,CAANV,CAAJ,EACE,OAAO;AACLP,YAAM,YADD;AAELmB,aAAOf,EAAQkD,CAARlD,IACHkD,EAASG,GAATH,CAAa,UAACI,CAAD,EAAIC,CAAJ,EAAIA;AAAAA,eAAO;AACtBG,eAAKJ,EAAEI,GAAFJ,CAAMxD,UAANwD,CAAiBzC,EAAE0C,CAAF1C,EAAK6C,GAAtBJ,CADiB;AAEtBvC,iBAAOuC,EAAEvC,KAAFuC,CAAQxD,UAARwD,CAAmBzC,EAAE0C,CAAF1C,EAAKE,KAAxBuC;AAFe,SAAPC;AAEgBxC,OAFjCmC,CADGlD,GAKHA,EAAQa,CAARb,IACAa,EAAEwC,GAAFxC,CAAM,UAAC2C,CAAD,EAACA;AAAAA,eAAO;AACZE,eAAKR,EAASQ,GAATR,CAAapD,UAAboD,CAAwBM,EAAEE,GAA1BR,CADO;AAEZnC,iBAAOmC,EAASnC,KAATmC,CAAepD,UAAfoD,CAA0BM,EAAEzC,KAA5BmC;AAFK,SAAPM;AAE8BzC,OAFrCF,CADAb,GAKA,CACE;AACE0D,aAAKR,EAASQ,GAATR,CAAapD,UAAboD,CAAwBrC,EAAE6C,GAA1BR,CADP;AAEEnC,eAAOmC,EAASnC,KAATmC,CAAepD,UAAfoD,CAA0BrC,EAAEE,KAA5BmC;AAFT,OADF;AAZC,KAAP;AAmBFzC,MAAe,qCAAfA;AAAe,GAvBnBb,EAyBE,UAACiB,CAAD,EAACA;AAAAA,WAAMA,CAANA;AAAMA,GAzBTjB,CADyBsD;AA0BhBrC,CA5cX;AAAA,IA+ca8C,IAAQ,UAACC,CAAD,EAAKC,CAAL,EAAKA;AAAAA,8BAAS,EAATA,GACxBjE,EACE,OADFA,EAEE,UAACiB,CAAD,EAACA;AACC,QAAIV,EAAMU,CAANV,CAAJ,EACE,OAAO;AACLP,YAAM,OADD;AAELmB,aAAO;AACL6C,YAAIA,CADC;AAELC,gBAAQ7D,EAAQ6D,CAAR7D,IACJ6D,EAAOR,GAAPQ,CAAW,UAACP,CAAD,EAAIC,CAAJ,EAAIA;AAAAA,iBAAO;AACpBO,kBAAMjD,EAAEgD,MAAFhD,CAAS0C,CAAT1C,EAAYiD,IADE;AAEpB/C,mBAAOuC,EAAEvC,KAAFuC,CAAQxD,UAARwD,CAAmBzC,EAAEgD,MAAFhD,CAAS0C,CAAT1C,EAAYE,KAA/BuC;AAFa,WAAPC;AAEyBxC,SAFxC8C,CADI7D,GAKJa,EAAEgD,MAAFhD,CAASwC,GAATxC,CAAa,UAAC2C,CAAD,EAACA;AAAAA,iBAAO;AACnBM,kBAAMN,EAAEM,IADW;AAEnB/C,mBAAO8C,EAAO9C,KAAP8C,CAAa/D,UAAb+D,CAAwBL,EAAEzC,KAA1B8C;AAFY,WAAPL;AAEqBzC,SAFnCF;AAPC;AAFF,KAAP;AAeFJ,MAAe,gCAAfA;AAAe,GAnBnBb,EAqBE,UAACiB,CAAD,EAACA;AAAAA,WAAMA,CAANA;AAAMA,GArBTjB,CADwBiE;AAsBfhD,CAreX;AAAA,IAweakD,IAAW,UAACH,CAAD,EAAKC,CAAL,EAAKA;AAAAA,8BAAS,EAATA,GAC3BjE,EACE,UADFA,EAEE,UAACiB,CAAD,EAACA;AACC,QAAIV,EAAMU,CAANV,CAAJ,EACE,OAAO;AACLP,YAAM,UADD;AAELmB,aAAO;AACL6C,YAAIA,CADC;AAELC,gBAAQ7D,EAAQ6D,CAAR7D,IACJ6D,EAAOR,GAAPQ,CAAW,UAACP,CAAD,EAAIC,CAAJ,EAAIA;AAAAA,iBAAO;AACpBO,kBAAMjD,EAAEgD,MAAFhD,CAAS0C,CAAT1C,EAAYiD,IADE;AAEpB/C,mBAAOuC,EAAEvC,KAAFuC,CAAQxD,UAARwD,CAAmBzC,EAAEgD,MAAFhD,CAAS0C,CAAT1C,EAAYE,KAA/BuC;AAFa,WAAPC;AAEyBxC,SAFxC8C,CADI7D,GAKJa,EAAEgD,MAAFhD,CAASwC,GAATxC,CAAa,UAAC2C,CAAD,EAACA;AAAAA,iBAAO;AACnBM,kBAAMN,EAAEM,IADW;AAEnB/C,mBAAO8C,EAAO9C,KAAP8C,CAAa/D,UAAb+D,CAAwBL,EAAEzC,KAA1B8C;AAFY,WAAPL;AAEqBzC,SAFnCF;AAPC;AAFF,KAAP;AAeFJ,MAAe,mCAAfA;AAAe,GAnBnBb,EAqBE,UAACiB,CAAD,EAACA;AAAAA,WAAMA,CAANA;AAAMA,GArBTjB,CAD2BiE;AAsBlBhD,CA9fX;AAAA,IAigBamD,IAAS,UAACJ,CAAD,EAAKC,CAAL,EAAKA;AAAAA,8BAAS,EAATA,GACzBjE,EACE,QADFA,EAEE,UAACiB,CAAD,EAACA;AACC,QAAIV,EAAMU,CAANV,CAAJ,EACE,OAAO;AACLP,YAAM,QADD;AAELmB,aAAO;AACL6C,YAAIA,CADC;AAELC,gBAAQ7D,EAAQ6D,CAAR7D,IACJ6D,EAAOR,GAAPQ,CAAW,UAACP,CAAD,EAAIC,CAAJ,EAAIA;AAAAA,iBAAO;AACpBO,kBAAMjD,EAAEgD,MAAFhD,CAAS0C,CAAT1C,EAAYiD,IADE;AAEpB/C,mBAAOuC,EAAEvC,KAAFuC,CAAQxD,UAARwD,CAAmBzC,EAAEgD,MAAFhD,CAAS0C,CAAT1C,EAAYE,KAA/BuC;AAFa,WAAPC;AAEyBxC,SAFxC8C,CADI7D,GAKJa,EAAEgD,MAAFhD,CAASwC,GAATxC,CAAa,UAAC2C,CAAD,EAACA;AAAAA,iBAAO;AACnBM,kBAAMN,EAAEM,IADW;AAEnB/C,mBAAO8C,EAAO9C,KAAP8C,CAAa/D,UAAb+D,CAAwBL,EAAEzC,KAA1B8C;AAFY,WAAPL;AAEqBzC,SAFnCF;AAPC;AAFF,KAAP;AAeFJ,MAAe,iCAAfA;AAAe,GAnBnBb,EAqBE,UAACiB,CAAD,EAACA;AAAAA,WAAMA,CAANA;AAAMA,GArBTjB,CADyBiE;AAsBhBhD,CAvhBX;AAAA,IA0hBaoD,IAAOrE,EAChB,MADgBA,EAEhB,UAACiB,CAAD,EAACA;AACC,MAAIV,EAAMU,CAANV,CAAJ,EAaE,OAZKK,EAASK,EAAEqD,MAAX1D,KACHC,uDAAkEI,EAAEqD,MAApEzD,GAAoEyD,mGAApEzD,CADGD,EAIc,cAAbK,EAAEqD,MAAW,IAA0B,cAAbrD,EAAEqD,MAAf,IAAoD,aAAbrD,EAAEqD,MAAzC,IACjBzD,qFAAgGI,EAAEqD,MAAlGzD,GAAkGyD,mGAAlGzD,CALGD,EAQAA,EAASK,EAAEsD,UAAX3D,KACHC,2DAAsEI,EAAEsD,UAAxE1D,GAAwE0D,mGAAxE1D,CATGD,EAYE;AACLZ,UAAM,MADD;AAELmB,WAAO;AACLmD,cAAQrD,EAAEqD,MADL;AAELC,kBAAYtD,EAAEsD;AAFT;AAFF,GAAP;AAQF1D,IAAe,+BAAfA;AAAe,CAxBDb,EA0BhB,UAACiB,CAAD,EAACA;AAAAA,SAAMA,CAANA;AAAMA,CA1BSjB,CA1hBpB;;AAojBWiB","names":["type","label","asArgument","asInjection","isArray","d","Array","isObj","isNull","isNumber","isInteger","Number","isString","throwTypeError","msg","Error","Identity","v","UInt","value","toString","Int","UInt8","Int8","UInt16","Int16","UInt32","Int32","UInt64","Int64","UInt128","Int128","UInt256","Int256","Word8","Word16","Word32","Word64","UFix64AndFix64NumberDeprecationNotice","console","error","replace","trim","UFix64","vParts","split","length","Fix64","String","Character","Bool","Address","Void","Optional","children","Reference","_Array","map","c","i","x","Dictionary","key","Event","id","fields","name","Resource","Struct","Path","domain","identifier"],"sources":["C:\\Users\\DM\\Desktop\\nftdapp\\node_modules\\@onflow\\types\\src\\types.js"],"sourcesContent":["const type = (label, asArgument, asInjection) => ({\n  label,\n  asArgument,\n  asInjection,\n})\n\nconst isArray = (d) => Array.isArray(d)\nconst isObj = (d) => typeof d === \"object\"\nconst isNull = (d) => d == null\nconst isBoolean = (d) => typeof d === \"boolean\"\nconst isNumber = (d) => typeof d === \"number\"\nconst isInteger = (d) => Number.isInteger(d)\nconst isString = (d) => typeof d === \"string\"\n\nconst throwTypeError = (msg) => {\n  throw new Error(\"Type Error: \" + msg)\n}\n\nexport const Identity = type(\n  \"Identity\",\n  (v) => v,\n  (v) => v\n)\n\nexport const UInt = type(\n  \"UInt\",\n  (v) => {\n    if (isNumber(v) && isInteger(v))\n      return {\n        type: \"UInt\",\n        value: v.toString(),\n      }\n    throwTypeError(\"Expected Positive Integer for type Unsigned Int\")\n  },\n  (v) => v\n)\n\nexport const Int = type(\n  \"Int\",\n  (v) => {\n    if (isNumber(v) && isInteger(v))\n      return {\n        type: \"Int\",\n        value: v.toString(),\n      }\n    throwTypeError(\"Expected Integer for type Int\")\n  },\n  (v) => v\n)\n\nexport const UInt8 = type(\n  \"UInt8\",\n  (v) => {\n    if (isNumber(v) && isInteger(v))\n      return {\n        type: \"UInt8\",\n        value: v.toString(),\n      }\n    throwTypeError(\"Expected integer for UInt8\")\n  },\n  (v) => v\n)\n\nexport const Int8 = type(\n  \"Int8\",\n  (v) => {\n    if (isNumber(v) && isInteger(v))\n      return {\n        type: \"Int8\",\n        value: v.toString(),\n      }\n    throwTypeError(\"Expected positive integer for Int8\")\n  },\n  (v) => v\n)\n\nexport const UInt16 = type(\n  \"UInt16\",\n  (v) => {\n    if (isNumber(v) && isInteger(v))\n      return {\n        type: \"UInt16\",\n        value: v.toString(),\n      }\n    throwTypeError(\"Expected integer for UInt16\")\n  },\n  (v) => v\n)\n\nexport const Int16 = type(\n  \"Int16\",\n  (v) => {\n    if (isNumber(v) && isInteger(v))\n      return {\n        type: \"Int16\",\n        value: v.toString(),\n      }\n    throwTypeError(\"Expected positive integer for Int16\")\n  },\n  (v) => v\n)\n\nexport const UInt32 = type(\n  \"UInt32\",\n  (v) => {\n    if (isNumber(v) && isInteger(v))\n      return {\n        type: \"UInt32\",\n        value: v.toString(),\n      }\n    throwTypeError(\"Expected integer for UInt32\")\n  },\n  (v) => v\n)\n\nexport const Int32 = type(\n  \"Int32\",\n  (v) => {\n    if (isNumber(v) && isInteger(v))\n      return {\n        type: \"Int32\",\n        value: v.toString(),\n      }\n    throwTypeError(\"Expected positive integer for Int32\")\n  },\n  (v) => v\n)\n\nexport const UInt64 = type(\n  \"UInt64\",\n  (v) => {\n    if (isNumber(v) && isInteger(v))\n      return {\n        type: \"UInt64\",\n        value: v.toString(),\n      }\n    throwTypeError(\"Expected integer for UInt64\")\n  },\n  (v) => v\n)\n\nexport const Int64 = type(\n  \"Int64\",\n  (v) => {\n    if (isNumber(v) && isInteger(v))\n      return {\n        type: \"Int64\",\n        value: v.toString(),\n      }\n    throwTypeError(\"Expected positive integer for Int64\")\n  },\n  (v) => v\n)\n\nexport const UInt128 = type(\n  \"UInt128\",\n  (v) => {\n    if (isNumber(v) && isInteger(v))\n      return {\n        type: \"UInt128\",\n        value: v.toString(),\n      }\n    throwTypeError(\"Expected integer for UInt128\")\n  },\n  (v) => v\n)\n\nexport const Int128 = type(\n  \"Int128\",\n  (v) => {\n    if (isNumber(v) && isInteger(v))\n      return {\n        type: \"Int128\",\n        value: v.toString(),\n      }\n    throwTypeError(\"Expected positive integer for Int128\")\n  },\n  (v) => v\n)\n\nexport const UInt256 = type(\n  \"UInt256\",\n  (v) => {\n    if (isNumber(v) && isInteger(v))\n      return {\n        type: \"UInt256\",\n        value: v.toString(),\n      }\n    throwTypeError(\"Expected integer for UInt256\")\n  },\n  (v) => v\n)\n\nexport const Int256 = type(\n  \"Int256\",\n  (v) => {\n    if (isNumber(v) && isInteger(v))\n      return {\n        type: \"Int256\",\n        value: v.toString(),\n      }\n    throwTypeError(\"Expected integer for Int256\")\n  },\n  (v) => v\n)\n\nexport const Word8 = type(\n  \"Word8\",\n  (v) => {\n    if (isNumber(v) && isInteger(v))\n      return {\n        type: \"Word8\",\n        value: v.toString(),\n      }\n    throwTypeError(\"Expected positive number for Word8\")\n  },\n  (v) => v\n)\n\nexport const Word16 = type(\n  \"Word16\",\n  (v) => {\n    if (isNumber(v) && isInteger(v))\n      return {\n        type: \"Word16\",\n        value: v.toString(),\n      }\n    throwTypeError(\"Expected positive number for Word16\")\n  },\n  (v) => v\n)\n\nexport const Word32 = type(\n  \"Word32\",\n  (v) => {\n    if (isNumber(v) && isInteger(v))\n      return {\n        type: \"Word32\",\n        value: v.toString(),\n      }\n    throwTypeError(\"Expected positive number for Word32\")\n  },\n  (v) => v\n)\n\nexport const Word64 = type(\n  \"Word64\",\n  (v) => {\n    if (isNumber(v) && isInteger(v))\n      return {\n        type: \"Word64\",\n        value: v.toString(),\n      }\n    throwTypeError(\"Expected positive number for Word64\")\n  },\n  (v) => v\n)\n\nconst UFix64AndFix64NumberDeprecationNotice = () => {\n  console.error(\n    `\n          %c@onflow/types Deprecation Notice\n          ========================\n\n          Passing in Numbers as values for Fix64 and UFix64 types is deprecated and will cease to work in future releases of @onflow/types.\n          Find out more here: https://github.com/onflow/flow-js-sdk/blob/master/packages/types/WARNINGS.md#0001-[U]Fix64-as-Number\n\n          =======================\n        `\n      .replace(/\\n\\s+/g, \"\\n\")\n      .trim(),\n    \"font-weight:bold;font-family:monospace;\"\n  )\n}\n\nexport const UFix64 = type(\n  \"UFix64\",\n  (v) => {\n    if (isString(v)) {\n      const vParts = v.split(\".\")\n      if (vParts.length !== 2) {\n        throwTypeError(`Expected one decimal but found ${vParts.length} in the [U]Fix64 value. Find out more about [U]Fix64 types here: https://docs.onflow.org/cadence/json-cadence-spec/#fixed-point-numbers`)\n      }\n      if (vParts[1].length == 0 || vParts[1].length > 8) {\n        throwTypeError(`Expected at least one digit, and at most 8 digits following the decimal of the [U]Fix64 value but found ${vParts[1].length} digits. Find out more about [U]Fix64 types here: https://docs.onflow.org/cadence/json-cadence-spec/#fixed-point-numbers`)\n      }\n\n      return {\n        type: \"UFix64\",\n        value: v\n      }\n    } else if (isNumber(v)) {\n      UFix64AndFix64NumberDeprecationNotice()\n      return {\n        type: \"UFix64\",\n        value: v.toString()\n      }\n    }\n    throwTypeError(\"Expected String for UFix64\")\n  },\n  (v) => v\n)\n\nexport const Fix64 = type(\n  \"Fix64\",\n  (v) => {\n    if (isString(v)) {\n      const vParts = v.split(\".\")\n      if (vParts.length !== 2) {\n        throwTypeError(`Expected one decimal but found ${vParts.length} in the [U]Fix64 value. Find out more about [U]Fix64 types here: https://docs.onflow.org/cadence/json-cadence-spec/#fixed-point-numbers`)\n      }\n      if (vParts[1].length == 0 || vParts[1].length > 8) {\n        throwTypeError(`Expected at least one digit, and at most 8 digits following the decimal of the [U]Fix64 value but found ${vParts[1].length} digits. Find out more about [U]Fix64 types here: https://docs.onflow.org/cadence/json-cadence-spec/#fixed-point-numbers`)\n      }\n      \n      return {\n        type: \"Fix64\",\n        value: v\n      }\n    } else if (isNumber(v)) {\n      UFix64AndFix64NumberDeprecationNotice()\n      return {\n        type: \"Fix64\",\n        value: v.toString()\n      }\n    }\n    throwTypeError(\"Expected String for Fix64\")\n  },\n  (v) => v\n)\n\nexport const String = type(\n  \"String\",\n  (v) => {\n    if (isString(v))\n      return {\n        type: \"String\",\n        value: v,\n      }\n    throwTypeError(\"Expected String for type String\")\n  },\n  (v) => v\n)\n\nexport const Character = type(\n  \"Character\",\n  (v) => {\n    if (isString(v))\n      return {\n        type: \"Character\",\n        value: v,\n      }\n    throwTypeError(\"Expected Character for type Character\")\n  },\n  (v) => v\n)\n\nexport const Bool = type(\n  \"Bool\",\n  (v) => {\n    if (isBoolean(v))\n      return {\n        type: \"Bool\",\n        value: v,\n      }\n    throwTypeError(\"Expected Boolean for type Bool\")\n  },\n  (v) => v\n)\n\nexport const Address = type(\n  \"Address\",\n  (v) => {\n    if (isString(v))\n      return {\n        type: \"Address\",\n        value: v,\n      }\n    throwTypeError(\"Expected Address for type Address\")\n  },\n  (v) => v\n)\n\nexport const Void = type(\n  \"Void\",\n  (v) => {\n    if (!v || isNull(v))\n      return {\n        type: \"Void\",\n      }\n    throwTypeError(\"Expected Void for type Void\")\n  },\n  (v) => v\n)\n\nexport const Optional = (children) =>\n  type(\n    \"Optional\",\n    (v) => ({\n      type: \"Optional\",\n      value: isNull(v) ? null : children.asArgument(v),\n    }),\n    (v) => v\n  )\n\nexport const Reference = type(\n  \"Reference\",\n  (v) => {\n    if (isObj(v))\n      return {\n        type: \"Reference\",\n        value: v,\n      }\n    throwTypeError(\"Expected Object for type Reference\")\n  },\n  (v) => v\n)\n\nexport const _Array = (children = []) =>\n  type(\n    \"Array\",\n    (v) => {\n      return {\n        type: \"Array\",\n        value: isArray(children)\n          ? children.map((c, i) => c.asArgument(v[i]))\n          : v.map((x) => children.asArgument(x)),\n      }\n    },\n    (v) => v\n  )\n\nexport {_Array as Array}\n\nexport const Dictionary = (children = []) =>\n  type(\n    \"Dictionary\",\n    (v) => {\n      if (isObj(v))\n        return {\n          type: \"Dictionary\",\n          value: isArray(children)\n            ? children.map((c, i) => ({\n                key: c.key.asArgument(v[i].key),\n                value: c.value.asArgument(v[i].value),\n              }))\n            : isArray(v)\n            ? v.map((x) => ({\n                key: children.key.asArgument(x.key),\n                value: children.value.asArgument(x.value),\n              }))\n            : [\n                {\n                  key: children.key.asArgument(v.key),\n                  value: children.value.asArgument(v.value),\n                },\n              ],\n        }\n      throwTypeError(\"Expected Object for type Dictionary\")\n    },\n    (v) => v\n  )\n\nexport const Event = (id, fields = []) =>\n  type(\n    \"Event\",\n    (v) => {\n      if (isObj(v))\n        return {\n          type: \"Event\",\n          value: {\n            id: id,\n            fields: isArray(fields)\n              ? fields.map((c, i) => ({\n                  name: v.fields[i].name,\n                  value: c.value.asArgument(v.fields[i].value),\n                }))\n              : v.fields.map((x) => ({\n                  name: x.name,\n                  value: fields.value.asArgument(x.value),\n                })),\n          },\n        }\n      throwTypeError(\"Expected Object for type Event\")\n    },\n    (v) => v\n  )\n\nexport const Resource = (id, fields = []) =>\n  type(\n    \"Resource\",\n    (v) => {\n      if (isObj(v))\n        return {\n          type: \"Resource\",\n          value: {\n            id: id,\n            fields: isArray(fields)\n              ? fields.map((c, i) => ({\n                  name: v.fields[i].name,\n                  value: c.value.asArgument(v.fields[i].value),\n                }))\n              : v.fields.map((x) => ({\n                  name: x.name,\n                  value: fields.value.asArgument(x.value),\n                })),\n          },\n        }\n      throwTypeError(\"Expected Object for type Resource\")\n    },\n    (v) => v\n  )\n\nexport const Struct = (id, fields = []) =>\n  type(\n    \"Struct\",\n    (v) => {\n      if (isObj(v))\n        return {\n          type: \"Struct\",\n          value: {\n            id: id,\n            fields: isArray(fields)\n              ? fields.map((c, i) => ({\n                  name: v.fields[i].name,\n                  value: c.value.asArgument(v.fields[i].value),\n                }))\n              : v.fields.map((x) => ({\n                  name: x.name,\n                  value: fields.value.asArgument(x.value),\n                })),\n          },\n        }\n      throwTypeError(\"Expected Object for type Struct\")\n    },\n    (v) => v\n  )\n\nexport const Path = type(\n    \"Path\",\n    (v) => {\n      if (isObj(v)) {\n        if (!isString(v.domain)) {\n          throwTypeError(`Expected a string for the Path domain but found ${v.domain}. Find out more about the Path type here: https://docs.onflow.org/cadence/json-cadence-spec/#path`)\n        }\n\n        if (!(v.domain === \"storage\" || v.domain === \"private\" || v.domain === \"public\")) {\n          throwTypeError(`Expected either \"storage\", \"private\" or \"public\" as the Path domain but found ${v.domain}. Find out more about the Path type here: https://docs.onflow.org/cadence/json-cadence-spec/#path`)\n        }\n\n        if (!isString(v.identifier)) {\n          throwTypeError(`Expected a string for the Path identifier but found ${v.identifier}. Find out more about the Path type here: https://docs.onflow.org/cadence/json-cadence-spec/#path`)\n        }\n\n        return {\n          type: \"Path\",\n          value: {\n            domain: v.domain,\n            identifier: v.identifier\n          },\n        }\n      }\n      throwTypeError(\"Expected Object for type Path\")\n    },\n    (v) => v\n  )\n"]},"metadata":{},"sourceType":"module"}