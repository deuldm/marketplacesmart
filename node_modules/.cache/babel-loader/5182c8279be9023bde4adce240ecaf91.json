{"ast":null,"code":"import { CID } from 'multiformats/cid';\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request';\nimport { configure } from '../../lib/configure.js';\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js';\nimport { abortSignal } from '../../lib/abort-signal.js';\nimport { AbortController } from 'native-abort-controller';\nexport const createSetData = configure(api => {\n  async function setData(cid, data) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const controller = new AbortController();\n    const signal = abortSignal(controller.signal, options.signal);\n    const res = await api.post('object/patch/set-data', {\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: [`${cid}`],\n        ...options\n      }),\n      ...(await multipartRequest([data], controller, options.headers))\n    });\n    const {\n      Hash\n    } = await res.json();\n    return CID.parse(Hash);\n  }\n\n  return setData;\n});","map":{"version":3,"sources":["C:/Users/DM/Desktop/nftdapp/node_modules/ipfs-http-client/esm/src/object/patch/set-data.js"],"names":["CID","multipartRequest","configure","toUrlSearchParams","abortSignal","AbortController","createSetData","api","setData","cid","data","options","controller","signal","res","post","searchParams","arg","headers","Hash","json","parse"],"mappings":"AAAA,SAASA,GAAT,QAAoB,kBAApB;AACA,SAASC,gBAAT,QAAiC,mCAAjC;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,iBAAT,QAAkC,mCAAlC;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,OAAO,MAAMC,aAAa,GAAGJ,SAAS,CAACK,GAAG,IAAI;AAC5C,iBAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,IAA5B,EAAgD;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AAC9C,UAAMC,UAAU,GAAG,IAAIP,eAAJ,EAAnB;AACA,UAAMQ,MAAM,GAAGT,WAAW,CAACQ,UAAU,CAACC,MAAZ,EAAoBF,OAAO,CAACE,MAA5B,CAA1B;AACA,UAAMC,GAAG,GAAG,MAAMP,GAAG,CAACQ,IAAJ,CAAS,uBAAT,EAAkC;AAClDF,MAAAA,MADkD;AAElDG,MAAAA,YAAY,EAAEb,iBAAiB,CAAC;AAC9Bc,QAAAA,GAAG,EAAE,CAAE,GAAGR,GAAK,EAAV,CADyB;AAE9B,WAAGE;AAF2B,OAAD,CAFmB;AAMlD,UAAG,MAAMV,gBAAgB,CAAC,CAACS,IAAD,CAAD,EAASE,UAAT,EAAqBD,OAAO,CAACO,OAA7B,CAAzB;AANkD,KAAlC,CAAlB;AAQA,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAML,GAAG,CAACM,IAAJ,EAArB;AACA,WAAOpB,GAAG,CAACqB,KAAJ,CAAUF,IAAV,CAAP;AACD;;AACD,SAAOX,OAAP;AACD,CAhBqC,CAA/B","sourcesContent":["import { CID } from 'multiformats/cid';\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request';\nimport { configure } from '../../lib/configure.js';\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js';\nimport { abortSignal } from '../../lib/abort-signal.js';\nimport { AbortController } from 'native-abort-controller';\nexport const createSetData = configure(api => {\n  async function setData(cid, data, options = {}) {\n    const controller = new AbortController();\n    const signal = abortSignal(controller.signal, options.signal);\n    const res = await api.post('object/patch/set-data', {\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: [`${ cid }`],\n        ...options\n      }),\n      ...await multipartRequest([data], controller, options.headers)\n    });\n    const {Hash} = await res.json();\n    return CID.parse(Hash);\n  }\n  return setData;\n});"]},"metadata":{},"sourceType":"module"}