{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DM\\\\Desktop\\\\nftdapp\\\\src\\\\Collection.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport * as fcl from \"@onflow/fcl\";\nimport * as t from \"@onflow/types\";\nimport { useState, useEffect } from 'react';\nimport { getNFTsScript } from \"./cadence/scripts/get_nfts.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Collection(props) {\n  _s();\n\n  const [nfts, setNFTs] = useState([]);\n  useEffect(() => {\n    getUserNFTs();\n  }, []);\n\n  const getUserNFTs = async () => {\n    const result = await fcl.send([fcl.script(getNFTsScript), fcl.args([fcl.arg(props.address, t.Address)])]).then(fcl.decode);\n    console.log(result);\n    setNFTs(result);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: 'lightgreen'\n    },\n    children: nfts.map(nft => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: nft.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        style: {\n          width: \"100px\"\n        },\n        src: `https://ipfs.infura.io/ipfs/${nft.ipfsHash}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: nft.metadata.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }, this)]\n    }, nft.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Collection, \"7phIsx6Y0qCXkIWOSGOTifNBFYQ=\");\n\n_c = Collection;\nexport default Collection;\n\nvar _c;\n\n$RefreshReg$(_c, \"Collection\");","map":{"version":3,"sources":["C:/Users/DM/Desktop/nftdapp/src/Collection.js"],"names":["fcl","t","useState","useEffect","getNFTsScript","Collection","props","nfts","setNFTs","getUserNFTs","result","send","script","args","arg","address","Address","then","decode","console","log","backgroundColor","map","nft","id","width","ipfsHash","metadata","name"],"mappings":";;;AAAA,OAAO,WAAP;AAEA,OAAO,KAAKA,GAAZ,MAAqB,aAArB;AACA,OAAO,KAAKC,CAAZ,MAAmB,eAAnB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,SAAQC,aAAR,QAA4B,+BAA5B;;;AAGA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,WAAW,GAAG,YAAY;AAC5B,UAAMC,MAAM,GAAG,MAAMV,GAAG,CAACW,IAAJ,CAAS,CAC1BX,GAAG,CAACY,MAAJ,CAAWR,aAAX,CAD0B,EAE1BJ,GAAG,CAACa,IAAJ,CAAS,CACLb,GAAG,CAACc,GAAJ,CAAQR,KAAK,CAACS,OAAd,EAAuBd,CAAC,CAACe,OAAzB,CADK,CAAT,CAF0B,CAAT,EAKlBC,IALkB,CAKbjB,GAAG,CAACkB,MALS,CAArB;AAOAC,IAAAA,OAAO,CAACC,GAAR,CAAYV,MAAZ;AACAF,IAAAA,OAAO,CAACE,MAAD,CAAP;AACH,GAVD;;AAYA,sBACE;AAAK,IAAA,KAAK,EAAE;AAACW,MAAAA,eAAe,EAAE;AAAlB,KAAZ;AAAA,cACGd,IAAI,CAACe,GAAL,CAASC,GAAG,iBACT;AAAA,8BACI;AAAA,kBAAKA,GAAG,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE;AAAR,SAAZ;AAA8B,QAAA,GAAG,EAAG,+BAA8BF,GAAG,CAACG,QAAS;AAA/E;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,kBAAKH,GAAG,CAACI,QAAJ,CAAaC;AAAlB;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA,OAAUL,GAAG,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA,YADH;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GA9BQnB,U;;KAAAA,U;AAgCT,eAAeA,UAAf","sourcesContent":["import './App.css';\r\n\r\nimport * as fcl from \"@onflow/fcl\";\r\nimport * as t from \"@onflow/types\";\r\nimport {useState, useEffect} from 'react';\r\nimport {getNFTsScript} from \"./cadence/scripts/get_nfts.js\";\r\n\r\n\r\nfunction Collection(props) {\r\n  const [nfts, setNFTs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getUserNFTs();\r\n  }, [])\r\n\r\n  const getUserNFTs = async () => {\r\n      const result = await fcl.send([\r\n          fcl.script(getNFTsScript),\r\n          fcl.args([\r\n              fcl.arg(props.address, t.Address)\r\n          ])\r\n      ]).then(fcl.decode);\r\n\r\n      console.log(result);\r\n      setNFTs(result);\r\n  }\r\n \r\n  return (\r\n    <div style={{backgroundColor: 'lightgreen'}}>\r\n      {nfts.map(nft => (\r\n          <div key={nft.id}>\r\n              <h1>{nft.id}</h1>\r\n              <img style={{width: \"100px\"}} src={`https://ipfs.infura.io/ipfs/${nft.ipfsHash}`} />\r\n              <h1>{nft.metadata.name}</h1>\r\n          </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Collection;"]},"metadata":{},"sourceType":"module"}